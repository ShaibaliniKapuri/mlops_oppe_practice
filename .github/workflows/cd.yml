# .github/workflows/cd.yml

name: Build and Deploy to GKE with CML Report

on:
  push:
    branches:
      - main

# Granting permissions at the top level of the workflow
permissions:
  contents: 'read'
  id-token: 'write'
  issues: 'write'         # Allows writing comments on issues
  pull-requests: 'write'  # Allows writing comments on pull requests
  
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_ARTIFACT_REGISTRY: us-central1-docker.pkg.dev
  GKE_CLUSTER: ${{ secrets.GCP_GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GCP_GKE_ZONE }}
  REPOSITORY_NAME: my-repo-docker-k8s # Your Artifact Registry repo name
  IMAGE_NAME: heart-api
  DEPLOYMENT_NAME: heart-cluster
  SERVICE_NAME: heart-api-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up GKE credentials
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GCP_ARTIFACT_REGISTRY }} --quiet

    - name: Build and Push Docker Image
      run: |
        IMAGE_URL="${{ env.GCP_ARTIFACT_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        docker build -t $IMAGE_URL .
        docker push $IMAGE_URL
        echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV

    - name: Update Kubernetes Manifest
      run: |
        sed -i "s|__IMAGE_URL__|${{ env.IMAGE_URL }}|g" kubernetes/deployment.yaml

    - name: Deploy to GKE
      run: |
        kubectl apply -f kubernetes/deployment.yaml
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}

    - name: Set up CML
      uses: iterative/setup-cml@v2
        
    - name: CML Report
      run: |
        echo "Waiting for LoadBalancer external IP..."
        sleep 60
        SERVICE_IP=$(kubectl get service ${{ env.SERVICE_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        
        echo "## ðŸš€ Deployment Successful" > report.md
        echo "API deployed to GKE and is available at: **http://$SERVICE_IP**" >> report.md
        echo "" >> report.md
        echo "### Test with:" >> report.md
        echo "\`\`\`bash" >> report.md
        echo "curl -X POST http://$SERVICE_IP/predict -H 'Content-Type: application/json' -d  "{\"features\": [63.0,1.0,3.0,145.0,233.0,1.0,0.0,150.0,0.0,2.3,0.0,0.0,1.0]}" >> report.md
        echo "\`\`\`" >> report.md

        cml comment create report.md
      env:
          #REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_TOKEN: ${{ secrets.CML_REPO_TOKEN }}
